Transform: AWS::Serverless-2016-10-31
Metadata:
  AWS::ServerlessRepo::Application:
    Name: AthenaNeptuneConnector
    Description: This connector enables Amazon Athena to communicate with your Neptune
      instance, making your Neptune graph data accessible via SQL.
    Author: default author
    SpdxLicenseId: Apache-2.0
    LicenseUrl: s3://temp-storage-04082020/79f6450d70768ae78237927184a16088
    ReadmeUrl: s3://temp-storage-04082020/533939444769601206788a18708cf135
    Labels:
    - athena-federation
    - athena-neptune
    - neptune
    HomePageUrl: https://github.com/awslabs/aws-athena-query-federation
    SemanticVersion: 2020.5.1
    SourceCodeUrl: https://github.com/awslabs/aws-athena-query-federation
Parameters:
  NeptuneClusterEndpoint:
    Description: The Neptune cluster endpoint
    Type: String
    Default: neptune-afc1-cluster.cluster-cccxf54xesdt.us-west-2.neptune.amazonaws.com
  NeptunePort:
    Description: The Neptune port
    Type: String
    Default: '8182'
  GlueDatabaseName:
    Description: Name of the Neptune cluster specific Glue Database that contains
      schemas of graph vertices
    Type: String
    Default: graph-database
  AthenaCatalogName:
    Description: The name you will give to this catalog in Athena. It will also be
      used as the function name. This name must satisfy the pattern ^[a-z0-9-_]{1,64}$
    Type: String
    Default: athena-catalog-1
    AllowedPattern: ^[a-z0-9-_]{1,64}$
  SpillBucket:
    Description: The name of the bucket where this function can spill data.
    Type: String
    Default: temp-storage-04082020
  SpillPrefix:
    Description: The prefix within SpillBucket where this function can spill data.
    Type: String
    Default: athena-neptune-spill
  LambdaTimeout:
    Description: Maximum Lambda invocation runtime in seconds. (min 1 - 900 max)
    Default: 900
    Type: Number
  LambdaMemory:
    Description: Lambda memory in MB (min 128 - 3008 max).
    Default: 3008
    Type: Number
  DisableSpillEncryption:
    Description: If set to 'false' data spilled to S3 is encrypted with AES GCM
    Default: 'false'
    Type: String
  SecurityGroupIds:
    Description: One or more SecurityGroup IDs corresponding to the SecurityGroup
      that should be applied to the Lambda function. (e.g. sg1,sg2,sg3)
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-0e75938662bf6cd40
  SubnetIds:
    Description: One or more Subnet IDs corresponding to the Subnet that the Lambda
      function can use to access you data source. (e.g. subnet1,subnet2)
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-01778dbda342707ad,subnet-0e6ffd65f49944924,subnet-0c897f364881ebe20,subnet-02f916ad6a1bf3467
Resources:
  ConnectorConfig:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          disable_spill_encryption:
            Ref: DisableSpillEncryption
          spill_bucket:
            Ref: SpillBucket
          spill_prefix:
            Ref: SpillPrefix
          glue_database_name:
            Ref: GlueDatabaseName
          neptune_endpoint:
            Ref: NeptuneClusterEndpoint
          neptune_port:
            Ref: NeptunePort
      FunctionName:
        Ref: AthenaCatalogName
      Handler: com.amazonaws.athena.connectors.neptune.NeptuneCompositeHandler
      CodeUri: s3://temp-storage-04082020/4aca09712e3db0ef77182f87592f65bb
      Description: Enables Amazon Athena to communicate with Neptune, making your
        Neptune graph data accessible via SQL.
      Runtime: java8
      Timeout:
        Ref: LambdaTimeout
      MemorySize:
        Ref: LambdaMemory
      Policies:
      - Statement:
        - Action:
          - glue:GetTableVersions
          - glue:GetPartitions
          - glue:GetTables
          - glue:GetTableVersion
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetPartition
          - glue:GetDatabase
          - athena:GetQueryExecution
          - neptune-db:*
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
      - S3CrudPolicy:
          BucketName:
            Ref: SpillBucket
      - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          Ref: SecurityGroupIds
        SubnetIds:
          Ref: SubnetIds

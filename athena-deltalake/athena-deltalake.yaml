Transform: 'AWS::Serverless-2016-10-31'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: AthenaDeltalakeConnector
    Description: 'Enable AWS Athena to communicate with DeltaLake table stored in S3, making them accesible via SQL.'
    Author: 'default author'
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['athena-federation']
    HomePageUrl: https://github.com/awslabs/aws-athena-query-federation
    SemanticVersion: 2022.42.2
    SourceCodeUrl: https://github.com/awslabs/aws-athena-query-federation

Parameters:
  AthenaCatalogName:
    Description: 'The name you will give to this catalog in Athena. It will also be used as the function name. This name must satisfy the pattern ^[a-z0-9-_]{1,64}$'
    Type: String
    AllowedPattern: ^[a-z0-9-_]{1,64}$
  SpillBucket:
    Description: 'The name of the bucket where this function can spill data.'
    Type: String
    Default: "rafalslo-athena-events-query-spill"
  DataBucket:
      Description: "The bucket where the Delta tables live."
      Type: String
  SpillPrefix:
    Description: 'The prefix within SpillBucket where this function can spill data.'
    Type: String
    Default: athena-spill
  LambdaTimeout:
    Description: "Maximum Lambda invocation runtime in seconds. (min 1 - 900 max)"
    Default: 900
    Type: Number
  LambdaMemory:
    Description: "Lambda memory in MB (min 128 - 3008 max)."
    Default: 3008
    Type: Number
  DisableSpillEncryption:
    Description: "WARNING: If set to 'true' encryption for spilled data is disabled."
    Default: "false"
    Type: String
  LambdaRole:
    Description: "(Optional) A custom role to be used by the Connector lambda"
    Type: String

Conditions:
  NotHasLambdaRole: !Equals [!Ref LambdaRole, ""]

Resources:
  ConnectorConfig:
    Type: 'AWS::Serverless::Function'
    Properties:
      AutoPublishAlias: live
      Environment:
        Variables:
          disable_spill_encryption: !Ref DisableSpillEncryption
          spill_bucket: !Ref SpillBucket
          spill_prefix: !Ref SpillPrefix
          data_bucket: !Ref DataBucket
      FunctionName: !Sub "${AthenaCatalogName}"
      Handler: "com.amazonaws.connectors.athena.deltalake.DeltalakeCompositeHandler"
      CodeUri: "./target/athena-deltalake-2022.42.2.jar"
      Description: "Enables Amazon Athena to query Delta Lake tables stored in S3."
      Runtime: java11
      Timeout: !Ref LambdaTimeout
      MemorySize: !Ref LambdaMemory
      Role: !If [NotHasLambdaRole, !GetAtt FunctionRole.Arn, !Ref LambdaRole]

  FunctionRole:
    Condition: NotHasLambdaRole
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  FunctionExecutionPolicy:
    Condition: NotHasLambdaRole
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: FunctionExecutionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
          - Action:
              - athena:GetQueryExecution
              - s3:ListAllMyBuckets
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetLifecycleConfiguration
              - s3:PutLifecycleConfiguration
              - s3:DeleteObject
            Effect: Allow
            Resource:
              - Fn::Sub:
                  - arn:${AWS::Partition}:s3:::${bucketName}
                  - bucketName:
                      Ref: SpillBucket
              - Fn::Sub:
                  - arn:${AWS::Partition}:s3:::${bucketName}/*
                  - bucketName:
                      Ref: SpillBucket
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetLifecycleConfiguration
              - s3:PutLifecycleConfiguration
              - s3:DeleteObject
            Effect: Allow
            Resource:
              - Fn::Sub:
                  - arn:${AWS::Partition}:s3:::${bucketName}
                  - bucketName:
                      Ref: DataBucket
              - Fn::Sub:
                  - arn:${AWS::Partition}:s3:::${bucketName}/*
                  - bucketName:
                      Ref: DataBucket
      Roles:
        - !Ref FunctionRole